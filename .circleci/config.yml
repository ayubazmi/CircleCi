version: 2.1

executors:
  docker-executor:
    docker:
      - image: cimg/base:stable
    working_directory: ~/app

jobs:
  build-and-run:
    executor: docker-executor
    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Log in to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

      - run:
          name: Build PostgreSQL Image
          command: |
            docker build -t my-postgres-db -f Dockerfile.db .
            docker tag my-postgres-db $DOCKERHUB_USERNAME/my-postgres-db:${CIRCLE_BUILD_NUM}

      - run:
          name: Build Rails App Image
          command: |
            docker build -t my-rails-app -f Dockerfile.app .
            docker tag my-rails-app $DOCKERHUB_USERNAME/my-rails-app:${CIRCLE_BUILD_NUM}

      - run:
          name: Push Docker Images to Docker Hub
          command: |
            docker push $DOCKERHUB_USERNAME/my-postgres-db:${CIRCLE_BUILD_NUM}
            docker push $DOCKERHUB_USERNAME/my-rails-app:${CIRCLE_BUILD_NUM}

      - run:
          name: Update image tags in Kubernetes YAML
          command: |
            git config --global user.name "$GIT_USER_NAME"
            git config --global user.email "$GIT_USER_EMAIL"
            git clone https://$GITHUB_TOKEN@github.com/your-username/your-repo.git updated-yamls
            cd updated-yamls

            # Update lines like: image: ayubazmi/my-rails-app:xxx
            sed -i "s|\(image: $DOCKERHUB_USERNAME/my-rails-app:\).*|\1${CIRCLE_BUILD_NUM}|" k8s/rails-deployment.yaml
            sed -i "s|\(image: $DOCKERHUB_USERNAME/my-postgres-db:\).*|\1${CIRCLE_BUILD_NUM}|" k8s/postgres-deployment.yaml

            git add k8s/*.yaml
            git commit -m "Update image tags to build ${CIRCLE_BUILD_NUM}"
            git push origin main

      - run:
          name: Create Docker Network
          command: docker network create myapp-network

      - run:
          name: Start PostgreSQL Container
          command: |
            docker run -d --name postgres-db --network myapp-network $DOCKERHUB_USERNAME/my-postgres-db:${CIRCLE_BUILD_NUM}

      - run:
          name: Start Rails App Container
          command: |
            docker run -d \
              --name rails-app \
              --network myapp-network \
              -p 3000:3000 \
              -e DB_HOST=postgres-db \
              $DOCKERHUB_USERNAME/my-rails-app:${CIRCLE_BUILD_NUM}

      - run:
          name: Wait for app to boot
          command: sleep 15

workflows:
  version: 2
  build-and-run:
    jobs:
      - build-and-run
